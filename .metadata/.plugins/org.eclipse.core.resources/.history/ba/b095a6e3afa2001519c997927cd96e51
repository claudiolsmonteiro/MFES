
class TestGame is subclass of MyTestCase
operations
public TestGameStart :() ==> ()
TestGameStart() ==
(
	dcl g : Game := new Game();
	assertEqual(g.getgameBoard().getBoard(),{
			[0,0] |-> <White>, [0,1] |-> <Black>, [0,2] |-> <Black>,[0,3] |-> <Black>, [0,4] |-> <Black>, [0,5] |-> <Black>,[0,6] |-> <Black>, [0,7] |-> <Black>, 
			[1,0] |-> <White>,[1,1] |-> <Space>, [1,2] |-> <Space>, [1,3] |-> <Space>,[1,4] |-> <Space>, [1,5] |-> <Space>, [1,6] |-> <Space>,[1,7] |-> <Black>, 
			[2,0] |-> <White>, [2,1] |-> <Space>,[2,2] |-> <Space>, [2,3] |-> <Space>, [2,4] |-> <Space>,[2,5] |-> <Space>, [2,6] |-> <Space>, [2,7] |-> <Black>,
			[3,0] |-> <White>, [3,1] |-> <Space>, [3,2] |-> <Space>,[3,3] |-> <Space>, [3,4] |-> <Space>, [3,5] |-> <Space>,[3,6] |-> <Space>, [3,7] |-> <Black>, 
			[4,0] |-> <White>,[4,1] |-> <Space>, [4,2] |-> <Space>, [4,3] |-> <Space>,[4,4] |-> <Space>, [4,5] |-> <Space>, [4,6] |-> <Space>,[4,7] |-> <Black>, 
			[5,0] |-> <White>, [5,1] |-> <Space>,[5,2] |-> <Space>, [5,3] |-> <Space>, [5,4] |-> <Space>,[5,5] |-> <Space>, [5,6] |-> <Space>, [5,7] |-> <Black>,
			[6,0] |-> <White>, [6,1] |-> <Space>, [6,2] |-> <Space>,[6,3] |-> <Space>, [6,4] |-> <Space>, [6,5] |-> <Space>,[6,6] |-> <Space>, [6,7] |-> <Black>, 
			[7,0] |-> <White>,[7,1] |-> <White>, [7,2] |-> <White>, [7,3] |-> <White>,[7,4] |-> <White>, [7,5] |-> <White>, [7,6] |-> <White>,[7,7] |-> <Black>
		});
	assertEqual(g.getplayer1().getName(),<player1>);
	assertEqual(g.getplayer2().getName(),<player2>);
	assertEqual(g.currentplayer().getName(),<player1>);
	return;
);
public TestMovePiece : () ==> ()
TestMovePiece() ==
(
	dcl g : Game := new Game();
	assertTrue(g.movepiece([3,0],[3,3]));
	assertEqual(g.getgameBoard().getBoard()([3,0]),<Space>);
	assertEqual(g.getgameBoard().getBoard()([3,3]),<White>);
	return;
);

public checkGameOver : () ==> ()
TestMovePiece() ==
(
	dcl g : Game := new Game();
	for i = 0 to 32 do
	g.getplayer1().increaseOwned()
	
	return;
);

public static main: () ==> ()
                main() ==
                (
                   new TestGame().TestGameStart();
                   new TestGame().TestMovePiece();     
                );





functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end TestGame