class Board
types
-- TODO Define types here
	public Height = nat1;
	public Width = nat1;
	public Empty = <Empty>; 
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
	public height : Height := 8;
	public width : Width := 8;
	public board : map seq of nat to Empty := {|->};
operations
-- TODO Define operations here
public Board: () ==> Board
	Board () == (
		board := {
			[0,0] |-> <Empty>, [0,1] |-> <Empty>, [0,2] |-> <Empty>,
			[0,3] |-> <Empty>, [0,4] |-> <Empty>, [0,5] |-> <Empty>,
			[0,6] |-> <Empty>, [0,7] |-> <Empty>, [1,0] |-> <Empty>,
			[1,1] |-> <Empty>, [1,2] |-> <Empty>, [1,3] |-> <Empty>,
			[1,4] |-> <Empty>, [1,5] |-> <Empty>, [1,6] |-> <Empty>,
			[1,7] |-> <Empty>, [2,0] |-> <Empty>, [2,1] |-> <Empty>,
			[2,2] |-> <Empty>, [2,3] |-> <Empty>, [2,4] |-> <Empty>,
			[2,5] |-> <Empty>, [2,6] |-> <Empty>, [2,7] |-> <Empty>,
			[3,0] |-> <Empty>, [3,1] |-> <Empty>, [3,2] |-> <Empty>,
			[3,3] |-> <Empty>, [3,4] |-> <Empty>, [3,5] |-> <Empty>,
			[3,6] |-> <Empty>, [3,7] |-> <Empty>, [4,0] |-> <Empty>,
			[4,1] |-> <Empty>, [4,2] |-> <Empty>, [4,3] |-> <Empty>,
			[4,4] |-> <Empty>, [4,5] |-> <Empty>, [4,6] |-> <Empty>,
			[4,7] |-> <Empty>, [5,0] |-> <Empty>, [5,1] |-> <Empty>,
			[5,2] |-> <Empty>, [5,3] |-> <Empty>, [5,4] |-> <Empty>,
			[5,5] |-> <Empty>, [5,6] |-> <Empty>, [5,7] |-> <Empty>,
			[6,0] |-> <Empty>, [6,1] |-> <Empty>, [6,2] |-> <Empty>,
			[6,3] |-> <Empty>, [6,4] |-> <Empty>, [6,5] |-> <Empty>,
			[6,6] |-> <Empty>, [6,7] |-> <Empty>, [7,0] |-> <Empty>,
			[7,1] |-> <Empty>, [7,2] |-> <Empty>, [7,3] |-> <Empty>,
			[7,4] |-> <Empty>, [7,5] |-> <Empty>, [7,6] |-> <Empty>,
			[7,7] |-> <Empty>
		};
	);
functions
-- TODO Define functiones here

traces
-- TODO Define Combinatorial Test Traces here
end Board